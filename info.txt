30 minute timer per duel
the match does not end until the 30 minutes are up, or both users are finished
the match will be scored on a combination of time to complete, mem usage, and runtime
    - maybe score runtime very lightly, rounding a lot due to inconsistency to the nearest say 100 ms or so

first minimum working sprint goal:
    1. user accounts
    2. code editor
    3. problem descriptions, difficulty
    4. test cases
    5. run code
    6. get runtime, mem, io

next will be duels without matchmaking (challenge a friend with link)

should add twos / duo queue, 2 vs 2 with realtime duo code editing

"Problems are only problems because they ask the wrong questions." - maybe add quotes somewhere on the app for fun

Some question ideas:
    1. Implement `some data structure` with the methods `some methods`
        Ex.
            Implement a linked-list of nodes holding integers with 
            methods for adding at a position,
            removing at a position, and searching for an element.
        Ex.2
            Implement a hash-table with methods for retrieving, 
            adding, removing, and checking for the existence of elements.
            The hashing algorithm can me a naive solution.

    2. Some AOC problems ?


